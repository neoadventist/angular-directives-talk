angular.module("ui.bootstrap", ["ui.bootstrap.tpls", "ui.bootstrap.timepicker"]), angular.module("ui.bootstrap.tpls", ["template/timepicker/timepicker.html"]), angular.module("ui.bootstrap.timepicker", []).filter("pad",function () {
    return function (a) {
        return angular.isDefined(a) && a.toString().length < 2 && (a = "0" + a), a
    }
}).constant("timepickerConfig", {hourStep: 1, minuteStep: 1, showMeridian: !0, meridians: ["AM", "PM"], readonlyInput: !1, mousewheel: !0}).directive("timepicker", ["padFilter", "$parse", "timepickerConfig", function (a, b, c) {
    return{restrict: "EA", require: "ngModel", replace: !0, templateUrl: "template/timepicker/timepicker.html", scope: {model: "=ngModel"}, link: function (d, e, f) {
        function g() {
            var a = parseInt(d.hours, 10), b = d.showMeridian ? a > 0 && 13 > a : a >= 0 && 24 > a;
            return b ? (d.showMeridian && (12 === a && (a = 0), d.meridian === k[1] && (a += 12)), a) : void 0
        }

        function h() {
            var b = j.getHours();
            d.showMeridian && (b = 0 === b || 12 === b ? 12 : b % 12), d.hours = "h" === s ? b : a(b), d.validHours = !0;
            var c = j.getMinutes();
            d.minutes = "m" === s ? c : a(c), d.validMinutes = !0, d.meridian = d.showMeridian ? j.getHours() < 12 ? k[0] : k[1] : "", s = !1
        }

        function i(a) {
            var b = new Date(j.getTime() + 6e4 * a);
            b.getDate() !== j.getDate() && b.setDate(b.getDate() - 1), j.setTime(b.getTime()), d.model = new Date(j)
        }

        var j = new Date, k = c.meridians, l = c.hourStep;
        f.hourStep && d.$parent.$watch(b(f.hourStep), function (a) {
            l = parseInt(a, 10)
        });
        var m = c.minuteStep;
        f.minuteStep && d.$parent.$watch(b(f.minuteStep), function (a) {
            m = parseInt(a, 10)
        }), d.showMeridian = c.showMeridian, f.showMeridian && d.$parent.$watch(b(f.showMeridian), function (a) {
            if (d.showMeridian = !!a, d.model)h(); else {
                var b = new Date(j), c = g();
                angular.isDefined(c) && b.setHours(c), d.model = new Date(b)
            }
        });
        var n = e.find("input"), o = n.eq(0), p = n.eq(1), q = angular.isDefined(f.mousewheel) ? d.$eval(f.mousewheel) : c.mousewheel;
        if (q) {
            var r = function (a) {
                return a.originalEvent && (a = a.originalEvent), a.detail || a.wheelDelta > 0
            };
            o.bind("mousewheel", function (a) {
                d.$apply(r(a) ? d.incrementHours() : d.decrementHours()), a.preventDefault()
            }), p.bind("mousewheel", function (a) {
                d.$apply(r(a) ? d.incrementMinutes() : d.decrementMinutes()), a.preventDefault()
            })
        }
        var s = !1;
        d.readonlyInput = angular.isDefined(f.readonlyInput) ? d.$eval(f.readonlyInput) : c.readonlyInput, d.readonlyInput ? (d.updateHours = angular.noop, d.updateMinutes = angular.noop) : (d.updateHours = function () {
            var a = g();
            angular.isDefined(a) ? (s = "h", null === d.model && (d.model = new Date(j)), d.model.setHours(a)) : (d.model = null, d.validHours = !1)
        }, o.bind("blur", function () {
            d.validHours && d.hours < 10 && d.$apply(function () {
                d.hours = a(d.hours)
            })
        }), d.updateMinutes = function () {
            var a = parseInt(d.minutes, 10);
            a >= 0 && 60 > a ? (s = "m", null === d.model && (d.model = new Date(j)), d.model.setMinutes(a)) : (d.model = null, d.validMinutes = !1)
        }, p.bind("blur", function () {
            d.validMinutes && d.minutes < 10 && d.$apply(function () {
                d.minutes = a(d.minutes)
            })
        })), d.$watch(function () {
            return+d.model
        }, function (a) {
            !isNaN(a) && a > 0 && (j = new Date(a), h())
        }), d.incrementHours = function () {
            i(60 * l)
        }, d.decrementHours = function () {
            i(60 * -l)
        }, d.incrementMinutes = function () {
            i(m)
        }, d.decrementMinutes = function () {
            i(-m)
        }, d.toggleMeridian = function () {
            i(720 * (j.getHours() < 12 ? 1 : -1))
        }
    }}
}]), angular.module("template/timepicker/timepicker.html", []).run(["$templateCache", function (a) {
    a.put("template/timepicker/timepicker.html", '<table class="form-inline">\n	<tr class="text-center">\n		<td><a ng-click="incrementHours()" class="btn btn-link"><i class="icon-chevron-up"></i></a></td>\n		<td>&nbsp;</td>\n		<td><a ng-click="incrementMinutes()" class="btn btn-link"><i class="icon-chevron-up"></i></a></td>\n		<td ng-show="showMeridian"></td>\n	</tr>\n	<tr>\n		<td class="control-group" ng-class="{\'error\': !validHours}"><input type="text" ng-model="hours" ng-change="updateHours()" class="span1 text-center" ng-mousewheel="incrementHours()" ng-readonly="readonlyInput" maxlength="2" /></td>\n		<td>:</td>\n		<td class="control-group" ng-class="{\'error\': !validMinutes}"><input type="text" ng-model="minutes" ng-change="updateMinutes()" class="span1 text-center" ng-readonly="readonlyInput" maxlength="2"></td>\n		<td ng-show="showMeridian"><button ng-click="toggleMeridian()" class="btn text-center">{{meridian}}</button></td>\n	</tr>\n	<tr class="text-center">\n		<td><a ng-click="decrementHours()" class="btn btn-link"><i class="icon-chevron-down"></i></a></td>\n		<td>&nbsp;</td>\n		<td><a ng-click="decrementMinutes()" class="btn btn-link"><i class="icon-chevron-down"></i></a></td>\n		<td ng-show="showMeridian"></td>\n	</tr>\n</table>')
}]);